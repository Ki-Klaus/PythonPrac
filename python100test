# 有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？
# count = 0
# for i in range(1,5):
# 	for j in range(1,5):
# 		for k in range(1,5):
# 			if (i!=j)and(j!=k)and(i!=k):
# 				print(i, j, k)
# 				count = count + 1
# print(count)

# 企业发放的奖金根据利润提成。
# 利润(I)低于或等于10万元时，奖金可提10%；
# 10万到20万之间时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；
# 20万到40万之间时，高于20万元的部分，可提成5%；
# 40万到60万之间时高于40万元的部分，可提成3%；
# 60万到100万之间时，高于60万元的部分，可提成1.5%，
# 高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？
# i = 300000
# arr = [1000000,600000,400000,200000,100000,0]
# rat = [0.01,0.015,0.03,0.05,0.075,0.1]
# r = 0
# for idx in range(0,6):
#     if i>arr[idx]:
#         r+=(i-arr[idx])*rat[idx]
#         print ((i-arr[idx])*rat[idx])
#         i=arr[idx]
# print(r)

# 输入某年某月某日，判断这一天是这一年的第几天？
# year = 2017
# month = 4
# day = 9
# months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]
# if 0 < month < 12:
#     sum = months[month - 1]
# else:
#     print('data error')
# sum += day
# leap = 0
# if (year % 400 == 0) or ((year % 4 ==  0) and (year % 100 != 0)):
#     leap = 1
# if (leap == 1) and (month > 2):
#     sum += 1
# print('it is the %dthday', sum)

# 5
# 输入三个整数x,y,z，请把这三个数由小到大输出
# l = [3, 2, 1]
# l.sort()
# print(l)
# print(sorted(l))

# 6
# 菲波那切数列
# def fib(n):
# 	if n==1 or n==2:
# 		return 1
# 	return fib(n-1)+fib(n-2)
# print(fib(4))

# 7
# 将一个列表复制到另一个列表中
# list1 = [1,2,3,4,5]
# list2 = list1[:]
# print(list2)

# 8
# 99乘法表
# for i in range(1, 10):
#     for j in range(1, i + 1):
#         print("""%d*%d=%d""" % (i, j, i * j), end=" ")
#     print()

# 9
# 暂停输出一秒
# import time
# myD = {1:'a',2:'b'}
# for key, value in dict.items(myD):
# 	print(key, value)
# 	time.sleep(1)

# 10
# 暂停输出一秒，并格式化当前时间
# import time
# print(time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time())))
# time.sleep(1)
# print(time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time())))

# 11
# 古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？
# 兔子的规律为数列1,1,2,3,5,8,13,21....
# def fib(n):
#     if n == 1 or n == 2:
#         return 1
#     elif n == 0:
#         return 0
#     return fib(n - 1) + fib(n - 2)
# print(fib(10))

# 12
# 判断101-200之间有多少个素数，并输出所有素数。
# l = []
# for i in range(101, 200):
#     for j in range(2, i - 1):
#         if i % j == 0:
#             break
#     else:
#         l.append(i)
# print(l)

# 13
# 打印出所有的"水仙花数"，所谓"水仙花数"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个"水仙花数"，因为153=1的三次方＋5的三次方＋3的三次方。
# 利用for循环控制100-999个数，每个数分解出个位，十位，百位。
# for i in range(100, 1000):
#     s = str(i)
#     if int(s[0]) ** 3 + int(s[1]) ** 3 + int(s[2]) ** 3 == i:
#         print(i)

# 14
# 分解质因数

# 15
# 利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。

# 16
# 输出指定格式的日期。
# import datetime
# if __name__ == '__main__':
#     # 输出今日日期，格式为 dd/mm/yyyy。更多选项可以查看 strftime() 方法
#     print(datetime.date.today().strftime('%d/%m/%Y'))
#     # 创建日期对象
#     myDate = datetime.date(2020, 10, 9)
#     print(myDate.strftime('%d/%m/%Y'))
#     # 日期算数运算符
#     myDateNextDate = myDate + datetime.timedelta(days=1)
#     print(myDateNextDate.strftime('%d/%m/%Y'))
#     # 日期替换
#     myDateReplace = myDate.replace(year=myDate.year + 2)
#     print(myDateReplace.strftime('%d/%m/%Y'))

# 17
# 输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。
# import string
# s = 'hello world!! 12345'
# letters = 0
# space = 0
# digit = 0
# others = 0
# for c in s:
# 	if c.isalpha():
# 		letters +=1
# 	elif c.isspace():
# 		space +=1
# 	elif c.isdigit():
# 		digit +=1
# 	else:
# 		others +=1
# print(letters, space, digit, others)

# 18
# 求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制
# count = 4
# num = 5
# item = 0
# sum = 0
# for i in range(1, count + 1):
#     item = item + num * 10 ** (i - 1)
#     sum = sum + item
# print(sum)

# 19
# 一个数如果恰好等于它的因子之和，这个数就称为"完数"。例如6=1＋2＋3.编程找出1000以内的所有完数。

# 20
# 一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？
# height = 100
# total = 0
# for i in range(2, 11):
#     height = height / 2
#     total = total + height * 2
# print(total + 100)

# 21
# 猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。
# x = 1
# for day in range(0,9):
# 	x = (x+1)*2
# print(x)

# 22
# 两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。a说他不和x比，c说他不和x,z比，请编程序找出三队赛手的名单。
# n = ['a', 'b', 'c']
# m = []
# for i in range(3):
#     if n[i] != 'a' and n[i] != 'c':
#         m.insert(i, 'x')
#     elif n[i] != 'c':
#         m.insert(i, 'z')
#     else:
#         m.insert(i, 'y')
# print('a--%s, b--%s, c--%s' % (m[0], m[1], m[2]))

# 23
# 打印出如下图案（菱形）:
#    *
#   ***
#  *****
# *******
#  *****
#   ***
#    *
# for i in range(1, 5):
#     print(' ' * (4 - i), end="")
#     for j in range(1, 2 * i):
#         print('*', end="")
#     print()
# for i in range(3, 0, -1):
#     print(' ' * (4 - i), end="")
#     for j in range(1, 2 * i):
#         print('*', end="")
#     print()

# 24
# 有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。
# a = 2
# b = 1
# sum = 0
# for i in range(1, 21):
#     sum = sum + a / b
#     a, b = a + b, a
# print(sum)

# 25
# 求1+2!+3!+...+20!的和。
# s=1
# t=[]
# for i in range(1,21):
# 	s*=i
# 	t.append(s)
# print(sum(t)-1)

# 26
# 利用递归方法求5!
# def fun(n):
# 	if n ==0 or n ==1:
# 		return 1
# 	else:
# 		return n*fun(n-1)
# print(fun(5))

# 27
# 利用递归函数调用方式，将所输入的5个字符，以相反顺序打印出来。

# 28
# 题目：有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？
# 程序分析：利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数，依次类推，推到第一人（10岁），再往回推。
# def age(n):
#     if n == 1:
#         c = 10
#     else:
#         c = age(n - 1) + 2
#     return c
# print(age(5))

# 29
# 题目：给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。
# 程序分析：学会分解出每一位数。
# num = 12345
# l = str(num)[::-1]
# print(l)

# 30
# 一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。
# a = 12321
# a = str(a)
# c = a[::-1]
# if a == c:
#     print('yes')
# else:
#     print('no')

# 31
# 请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续判断第二个字母。

# 32
# 按相反的顺序输出列表的值。
# a = ['one', 'two', 'three', 'four', 'five', 'six', 'seven']
# for i in a[::-1]:
# 	print(i, end=" ")

# 33
# 按逗号分隔列表。
# l = [1,2,3,4]
# s1 = ','.join(str(n) for n in l)
# print(s1)

# 34
# 练习函数调用。
# def hello_world():
#     print('hello world')
# def three_hellos():
#     for i in range(3):
#         hello_world()
# if __name__ == '__main__':
#     three_hellos()

# 35
# 文本颜色设置。

# 36
# 求100之内的素数
# for i in range(2, 100):
#     if 0 not in [i % n for n in range(2, i)]:
#     	print(i)

# 37
# 对10个数进行排序。
# a = [12, 345, 5, 4, 7, 84, 6, 756, 5, 746, 46]
# for i in range(10):
#     for j in range(i + 1, 11):
#         if a[i] > a[j]:
#             a[i], a[j] = a[j], a[i]
# print(a)

# 38
# 求一个3*3矩阵对角线元素之和。
# """
#     1  2  3
#     4  5  6
#     7  8  9
# """
# matrix = [[1,2,3], [4,5,6],[7,8,9]]
# sum = 0
# for i in range(0,3):
# 	sum += matrix[i][i]
# print(sum)

# 39
# 有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。
# arr = [1, 4, 13, 25, 57, 78, 89]
# n = 33
# arr = sorted(arr)
# arr.append(n)
# arr = sorted(arr)
# print(arr)

# 40
# 将一个数组逆序输出。
# arr = [1, 4, 13, 25, 57, 78, 89]
# arr = arr[::-1]
# print(arr)

# 41
# 模仿静态变量的用法
# def varfunc():
# 	var = 0
# 	print('var = %d' % var)
# 	var += 1
# if __name__ == '__main__':
# 	for i in range(3):
# 		varfunc()
# class Static:
# 	StaticVar = 5
# 	def varfunc(self):
# 		self.StaticVar += 1
# 		print(self.StaticVar)
# print(Static.StaticVar)
# a = Static()
# for i in range(3):
# 	a.varfunc()

# 42
# 学习使用auto定义变量的用法。
# num = 2
# def autofunc():
#     num = 1
#     print('internal block num = %d' % num)
#     num += 1
# for i in range(3):
#     print('The num = %d' % num)
#     num += 1
#     autofunc()


# 43
# 模仿静态变量(static)另一案例。
# class Num:
# 	nNum = 1
# 	def inc(self):
# 		self.nNum += 1
# 		print('nNum = %d' % self.nNum)
# nNum = 2
# inst = Num()
# for i in range(3):
# 	nNum += 1
# 	print('The num = %d' % nNum)
# 	inst.inc()

# 44
# 两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：
# """
# X = [[12,7,3],
#     [4 ,5,6],
#     [7 ,8,9]]

# Y = [[5,8,1],
#     [6,7,3],
#     [4,5,9]]
# """

# 45
# 两个 3 行 3 列的矩阵，实现其对应位置的数据相加，并返回一个新矩阵：
# import numpy as np
# x = np.array( [[12,7,3],
#                [4 ,5,6],
#                [7 ,8,9]])
# y = np.array( [[5,8,1],
#                [6,7,3],
#                [4,5,9]])
# z = x+y
# print(z)
# X = [[12, 7, 3],
#      [4, 5, 6],
#      [7, 8, 9]]
# Y = [[5, 8, 1],
#      [6, 7, 3],
#      [4, 5, 9]]
# result = [[0, 0, 0],
#           [0, 0, 0],
#           [0, 0, 0]]
# for i in range(len(X)):
#     for j in range(len(X[0])):
#         result[i][j] = X[i][j] + Y[i][j]
# for r in result:
# 	print(r)

# 46
# 求输入数字的平方，如果平方运算后小于 50 则退出。

# 47
# 两个变量值互换。

# 48
# 数字比较。

# 49
# 使用lambda来创建匿名函数。
# list = list(map(lambda x: x * x, [1, 2, 3, 4, 5, 6, 7, 8, 9]))
# print(list)
# f = lambda x: x * x
# print(f(5))

# 50
# 输出一个随机数
# import random
# print(int(random.uniform(10,20)))

# 51
# 学习使用按位与 & 。

# 52
# 学习使用按位或 | 。

# 53
# 学习使用按位异或 ^ 。

# 54
# 取一个整数a从右端开始的4~7位。

# 55
# 学习使用按位取反~。

# 56
# 画图，学用circle画圆形。
# if __name__ == '__main__':
#     import turtle
#     turtle.title("画圆")
#     turtle.setup(800,600,0,0)
#     pen=turtle.Turtle()
#     pen.color("yellow")
#     pen.width(5)
#     pen.shape("turtle")
#     pen.speed(1)
#     pen.circle(100)

# 57
# 画图，学用line画直线。

# 58
# 画图，学用rectangle画方形。

# 59
# 画图综合

# 60
# 计算字符串长度。

# 61
# 打印出杨辉三角形。

# 62
# 查找字符串。
# str1 = 'abcdefg'
# str2 = 'bc'
# print(str1.find(str2))

# 63
# 画椭圆。

# 64
# 利用ellipse 和 rectangle 画图。

# 65
# 一个最优美的图案。

# 66
# 输入3个数a,b,c，按大小顺序输出。　

# 67
# 输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。
# a=[1,2,3,7,9,8]
# min = min(a)
# a.remove(min)
# a.append(min)
# # 最大的放到最前面
# max = max(a)
# a.remove(max)
# a.insert(0,max)
# print(a)

# 68
# 有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数
# from collections import deque
# m=3
# a=[1,2,3,4,5,6,7]
# f=deque(a)
# f.rotate(m)
# print(list(f))
# m = 3
# a = [1, 2, 3, 4, 5, 6, 7]
# def rot(a, n):
#     l = len(a)
#     n = l - n
#     return a[n:l] + a[0:n]
# b = rot(a, 3)
# print(b)

# 69
# 有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。
# data = [i+1 for i in range(20)]
# print(data)
# i = 1 
# while len(data) > 1:
#     if i % 3 == 0:
#         data.pop(0)
#         print(data)
#     else:
#         data.insert(len(data),data.pop(0))
#     i += 1
# print(data)

# 70
# 写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。

